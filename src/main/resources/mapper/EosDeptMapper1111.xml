<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.whale.eos.repository.org.EosDeptDAO" >
  <resultMap id="BaseResultMap" type="com.whale.eos.entity.org.EosDept" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="uno" property="uno" jdbcType="VARCHAR" />
    <result column="orgcode" property="orgcode" jdbcType="VARCHAR" />
    <result column="orgname" property="orgname" jdbcType="VARCHAR" />
    <result column="deptcode" property="deptcode" jdbcType="VARCHAR" />
    <result column="deptname" property="deptname" jdbcType="VARCHAR" />
    <result column="parentdeptcode" property="parentdeptcode" jdbcType="VARCHAR" />
    <result column="dnote" property="dnote" jdbcType="VARCHAR" />
    <result column="orgmark" property="orgmark" jdbcType="VARCHAR" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="VARCHAR" />
    <result column="updated_date" property="updatedDate" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uno, orgcode, orgname, deptcode, deptname, parentdeptcode, dnote, orgmark, addr, 
    tel, `state`, created_date, updated_date, created_by, updated_by, created_time, updated_time
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.whale.eos.base.entity.org.EosDeptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eos_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.whale.eos.base.entity.org.EosDeptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eos_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.whale.eos.base.entity.org.EosDeptExample" >
    delete from eos_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.whale.eos.base.entity.org.EosDeptExample" resultType="java.lang.Integer" >
    select count(*) from eos_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update eos_dept
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uno != null" >
        uno = #{record.uno,jdbcType=VARCHAR},
      </if>
      <if test="record.orgcode != null" >
        orgcode = #{record.orgcode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgname != null" >
        orgname = #{record.orgname,jdbcType=VARCHAR},
      </if>
      <if test="record.deptcode != null" >
        deptcode = #{record.deptcode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptname != null" >
        deptname = #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentdeptcode != null" >
        parentdeptcode = #{record.parentdeptcode,jdbcType=VARCHAR},
      </if>
      <if test="record.dnote != null" >
        dnote = #{record.dnote,jdbcType=VARCHAR},
      </if>
      <if test="record.orgmark != null" >
        orgmark = #{record.orgmark,jdbcType=VARCHAR},
      </if>
      <if test="record.addr != null" >
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null" >
        created_date = #{record.createdDate,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedDate != null" >
        updated_date = #{record.updatedDate,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update eos_dept
    set id = #{record.id,jdbcType=INTEGER},
      uno = #{record.uno,jdbcType=VARCHAR},
      orgcode = #{record.orgcode,jdbcType=VARCHAR},
      orgname = #{record.orgname,jdbcType=VARCHAR},
      deptcode = #{record.deptcode,jdbcType=VARCHAR},
      deptname = #{record.deptname,jdbcType=VARCHAR},
      parentdeptcode = #{record.parentdeptcode,jdbcType=VARCHAR},
      dnote = #{record.dnote,jdbcType=VARCHAR},
      orgmark = #{record.orgmark,jdbcType=VARCHAR},
      addr = #{record.addr,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=VARCHAR},
      updated_date = #{record.updatedDate,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="com.whale.eos.base.entity.org.EosDept" >
    insert into eos_dept (id, uno, orgcode, 
      orgname, deptcode, deptname, 
      parentdeptcode, dnote, orgmark, 
      addr, tel, `state`, created_date, 
      updated_date, created_by, updated_by, 
      created_time, updated_time)
    values (#{id,jdbcType=INTEGER}, #{uno,jdbcType=VARCHAR}, #{orgcode,jdbcType=VARCHAR}, 
      #{orgname,jdbcType=VARCHAR}, #{deptcode,jdbcType=VARCHAR}, #{deptname,jdbcType=VARCHAR}, 
      #{parentdeptcode,jdbcType=VARCHAR}, #{dnote,jdbcType=VARCHAR}, #{orgmark,jdbcType=VARCHAR}, 
      #{addr,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{createdDate,jdbcType=VARCHAR}, 
      #{updatedDate,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=VARCHAR}, #{updatedTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.whale.eos.base.entity.org.EosDept" >
    insert into eos_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      uno,
      orgcode,
      orgname,
      deptcode,
      deptname,
      parentdeptcode,
      dnote,
      orgmark,
      addr,
      tel,
      `state`,
      created_date,
      updated_date,
      created_by,
      updated_by,
      created_time,
      updated_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      #{uno,jdbcType=VARCHAR},
      #{orgcode,jdbcType=VARCHAR},
      #{orgname,jdbcType=VARCHAR},
      #{deptcode,jdbcType=VARCHAR},
      #{deptname,jdbcType=VARCHAR},
      #{parentdeptcode,jdbcType=VARCHAR},
      #{dnote,jdbcType=VARCHAR},
      #{orgmark,jdbcType=VARCHAR},
      #{addr,jdbcType=VARCHAR},
      #{tel,jdbcType=VARCHAR},
      #{state,jdbcType=VARCHAR},
      #{createdDate,jdbcType=VARCHAR},
      #{updatedDate,jdbcType=VARCHAR},
      #{createdBy,jdbcType=VARCHAR},
      #{updatedBy,jdbcType=VARCHAR},
      #{createdTime,jdbcType=VARCHAR},
      #{updatedTime,jdbcType=VARCHAR},
    </trim>
  </insert>
</mapper>
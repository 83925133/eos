<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.whale.eos.repository.org.EosEmpDAO" >
  <resultMap id="EosEmp" type="com.whale.eos.entity.org.EosEmp" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="uno" property="uno" jdbcType="VARCHAR" />
    <result column="deptcode" property="deptcode" jdbcType="VARCHAR" />
    <result column="deptname" property="deptname" jdbcType="VARCHAR" />
    <result column="orgcode" property="orgcode" jdbcType="VARCHAR" />
    <result column="eno" property="eno" jdbcType="VARCHAR" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="epwd" property="epwd" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="mob" property="mob" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="chelp" property="chelp" jdbcType="VARCHAR" />
    <result column="firstmark" property="firstmark" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="VARCHAR" />
    <result column="updated_date" property="updatedDate" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="VARCHAR" />
  </resultMap>
  
	<select id="findByEno" resultMap="EosEmp" parameterType="string">
		select 
			e.id, e.uno, e.deptcode, e.deptname, e.orgcode, e.eno, e.ename, e.pwd, e.epwd, e.`role`, e.tel, e.fax, e.mob, e.email, 
    e.qq, e.`state`, e.chelp, e.firstmark, e.created_date, e.updated_date, e.created_by, e.updated_by, e.created_time, e.updated_time
		from eos_emp e where eno= #{eno}
	</select>
  
  <!--
  <sql id="Base_Column_List" >
    id, uno, deptcode, deptname, orgcode, eno, ename, pwd, epwd, `role`, tel, fax, mob, email, 
    qq, `state`, chelp, firstmark, created_date, updated_date, created_by, updated_by, 
    created_time, updated_time
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.whale.eos.base.entity.org.EosEmpExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eos_emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.whale.eos.base.entity.org.EosEmpExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eos_emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.whale.eos.base.entity.org.EosEmpExample" >
    delete from eos_emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.whale.eos.base.entity.org.EosEmpExample" resultType="java.lang.Integer" >
    select count(*) from eos_emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update eos_emp
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uno != null" >
        uno = #{record.uno,jdbcType=VARCHAR},
      </if>
      <if test="record.deptcode != null" >
        deptcode = #{record.deptcode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptname != null" >
        deptname = #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.orgcode != null" >
        orgcode = #{record.orgcode,jdbcType=VARCHAR},
      </if>
      <if test="record.eno != null" >
        eno = #{record.eno,jdbcType=VARCHAR},
      </if>
      <if test="record.ename != null" >
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        `role` = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.mob != null" >
        mob = #{record.mob,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.chelp != null" >
        chelp = #{record.chelp,jdbcType=VARCHAR},
      </if>
      <if test="record.firstmark != null" >
        firstmark = #{record.firstmark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null" >
        created_date = #{record.createdDate,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedDate != null" >
        updated_date = #{record.updatedDate,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update eos_emp
    set id = #{record.id,jdbcType=INTEGER},
      uno = #{record.uno,jdbcType=VARCHAR},
      deptcode = #{record.deptcode,jdbcType=VARCHAR},
      deptname = #{record.deptname,jdbcType=VARCHAR},
      orgcode = #{record.orgcode,jdbcType=VARCHAR},
      eno = #{record.eno,jdbcType=VARCHAR},
      ename = #{record.ename,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      `role` = #{record.role,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      mob = #{record.mob,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=VARCHAR},
      chelp = #{record.chelp,jdbcType=VARCHAR},
      firstmark = #{record.firstmark,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=VARCHAR},
      updated_date = #{record.updatedDate,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="com.whale.eos.base.entity.org.EosEmp" >
    insert into eos_emp (id, uno, deptcode, 
      deptname, orgcode, eno, 
      ename, pwd, `role`, tel, 
      fax, mob, email, qq, 
      `state`, chelp, firstmark, 
      created_date, updated_date, created_by, 
      updated_by, created_time, updated_time
      )
    values (#{id,jdbcType=INTEGER}, #{uno,jdbcType=VARCHAR}, #{deptcode,jdbcType=VARCHAR}, 
      #{deptname,jdbcType=VARCHAR}, #{orgcode,jdbcType=VARCHAR}, #{eno,jdbcType=VARCHAR}, 
      #{ename,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{mob,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{chelp,jdbcType=VARCHAR}, #{firstmark,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=VARCHAR}, #{updatedDate,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=VARCHAR}, #{updatedTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.whale.eos.base.entity.org.EosEmp" >
    insert into eos_emp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      uno,
      deptcode,
      deptname,
      orgcode,
      eno,
      ename,
      pwd,
      `role`,
      tel,
      fax,
      mob,
      email,
      qq,
      `state`,
      chelp,
      firstmark,
      created_date,
      updated_date,
      created_by,
      updated_by,
      created_time,
      updated_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      #{uno,jdbcType=VARCHAR},
      #{deptcode,jdbcType=VARCHAR},
      #{deptname,jdbcType=VARCHAR},
      #{orgcode,jdbcType=VARCHAR},
      #{eno,jdbcType=VARCHAR},
      #{ename,jdbcType=VARCHAR},
      #{pwd,jdbcType=VARCHAR},
      #{role,jdbcType=VARCHAR},
      #{tel,jdbcType=VARCHAR},
      #{fax,jdbcType=VARCHAR},
      #{mob,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR},
      #{qq,jdbcType=VARCHAR},
      #{state,jdbcType=VARCHAR},
      #{chelp,jdbcType=VARCHAR},
      #{firstmark,jdbcType=VARCHAR},
      #{createdDate,jdbcType=VARCHAR},
      #{updatedDate,jdbcType=VARCHAR},
      #{createdBy,jdbcType=VARCHAR},
      #{updatedBy,jdbcType=VARCHAR},
      #{createdTime,jdbcType=VARCHAR},
      #{updatedTime,jdbcType=VARCHAR},
    </trim>
  </insert>
  -->
</mapper>
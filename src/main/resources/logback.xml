<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">
    <substitutionProperty name="log.base" value="../logs/lats"/>
    <jmxConfigurator/>
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date %-5level [%logger{0}] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Encoding>UTF-8</Encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天分文件夹存放 ，并压缩 -->
            <fileNamePattern>${log.base}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!-- 例如，假设每天滚动，且 maxHistory 是 30，则只 保留最近 30 天的归档文件，删除之前的文件。 -->
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>100MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--<maxFileSize>50MB</maxFileSize>-->
        <!--</triggeringPolicy>-->
        <encoder>
            <pattern>%date [%thread] %-5level [%logger{0}] - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="file-error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Encoding>UTF-8</Encoding>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>ACCEPT</OnMatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${log.base}-err.%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>50MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--<maxFileSize>50MB</maxFileSize>-->
        <!--</triggeringPolicy>-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d [%thread] %-5level %logger{0} - %msg%n</Pattern>
        </layout>
    </appender>
    <appender name="terminal-log" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Encoding>UTF-8</Encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${log.base}.%d{yyyy-MM-dd}-terminal-%i.log</FileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>50MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--<maxFileSize>50MB</maxFileSize>-->
        <!--</triggeringPolicy>-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d [%thread] %-5level %logger{0} - %msg%n</Pattern>
        </layout>
    </appender>

    <!--   -->
    <logger name="com.whale">
        <level value="debug"/>
    </logger>
    <logger name="org.springframework">
        <level value="warn"/>
    </logger>
    <logger name="org.hibernate">
        <level value="warn"/>
    </logger>
    <logger name="org.quartz">
        <level value="warn"/>
    </logger>
    <logger name="org.apache.commons">
        <level value="warn"/>
    </logger>
    <logger name="httpclient">
        <level value="warn"/>
    </logger>
    <logger name="com.debug.druid">
        <level value="warn"/>
    </logger>
    <logger name="com.alibaba.druid">
        <level value="warn"/>
    </logger>
    <logger name="druid.sql">
        <level value="warn"/>
    </logger>
    <logger name="net.sf">
        <level value="warn"/>
    </logger>
    <!--
    <logger name="com.topman.lats.inf.client.servlet.ClientServlet">
        <appender-ref ref="terminal-log"/>
    </logger>
    <logger name="com.topman.lats.inf.client.servlet.ClientCryptosServlet">
        <appender-ref ref="terminal-log"/>
    </logger>
    -->
    <!--配置mybatis显示sql-->
    <logger name="com.ibatis" level="DEBUG" />  
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />  
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />  
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />  
	<logger name="java.sql.Connection" level="DEBUG" />  
	<logger name="java.sql.Statement" level="DEBUG" />  
	<logger name="java.sql.PreparedStatement" level="DEBUG" /> 
	<!-- show sql
	<logger name="com.whale.eos.repository.bill" level="DEBUG"/> -->
	<logger name="com.whale.eos">
	    <level value="DEBUG" />
	    <appender-ref ref="stdout" />
	</logger>
    <root>
        <level value="debug"/>
        <appender-ref ref="logfile"/>
        <appender-ref ref="file-error"/>
    </root>
</configuration>
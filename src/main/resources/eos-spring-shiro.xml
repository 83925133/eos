<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="false">

    <description>Shiro安全配置</description>

    <!-- Shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroDbRealm"/>
        <!-- session 管理 暂时有点  问题  已经修正 -->
        <property name="sessionManager" ref="sessionManager" />
        <!-- <property name="cacheManager" ref="shiroEhcacheManager"/> --> 
        <!-- 采用以下配置，增加一个缓存管理器shiroCacheManager可通过配置选择缓存方式,缺省为 EhCache-->
        <property name="cacheManager" ref="shiroCacheManager"/> 
    </bean>

    <!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
    <bean id="shiroDbRealm" class="com.whale.eos.service.org.ShiroDbRealm" depends-on="eosEmpServiceImpl">
        <property name="eosEmpService" ref="eosEmpServiceImpl"/>
        <property name="useCaptcha" value="false"/>
    </bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/"/>
        <property name="filters">
            <map>
                <!-- 是否启用验证码检验 -->
                <entry key="authc" value-ref="captchaFormAuthenticationFilter"/>
            </map>
        </property>

        <property name="filterChainDefinitions">
            <value>
                /Captcha.jpg = anon
                /favicon.ico = anon
                /static/** = anon
                /login = authc
                /logout = logout
                /emp/update/pwd = authc
                /emp/index = authc
                /reg/init = anon
                /reg/** = anon
                /bill/checkbill/** = anon
                /emp/* = roles[ROLE_admin]
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache-->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml"/>
    </bean>
    
    <!-- 会话管理器 相关 start --> 
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
	    <property name="globalSessionTimeout" value="18000000"/>  
	    <property name="deleteInvalidSessions" value="true"/>  
	    <property name="sessionValidationSchedulerEnabled" value="true"/>
	    <property name="sessionDAO" ref="sessionDAO" />
	    <property name="sessionListeners" ref="eosShiroSessionListener"/> 
	    <property name="sessionValidationInterval" value="18000000"/>  
	    <property name="sessionIdCookie" ref="sessionIdCookie"/>  
	</bean>
	<!-- Cookie 实现类 -->   
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg name="name" value="SHRIOSESSIONID"/>  
	</bean> 
    <bean id="eosShiroSessionListener" class="com.whale.eos.web.EosShiroSessionListener"/>
     <!-- 会话管理器 相关 start --> 
     
    <!-- 安全框架缓存管理器  默认采用Ehcache 实现-->  
    <bean id="shiroCacheManager" class="com.whale.eos.basic.util.security.shiro.cache.ShiroCacheManager">  
        <property name="memcachedManager" ref="shiroMemcachedManager" />  
        <property name="ehCacheManager" ref="shiroEhcacheManager" />  
    </bean>  
  
    <!-- 扩展Memcached缓存管理器 -->  
    <bean id="shiroMemcachedManager" class="com.whale.eos.basic.util.security.shiro.cache.MemcachedManagerImpl"> 
    	<constructor-arg ref="memcachedClient" />  
    </bean> 
    
    <!-- 会话  读写实现类： Shiro自带的一种 -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	<!-- 会话ID 生成器-->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话读写实现类：自定义 -->  
    <!-- 
    <bean id="sessionDAO" class="com.whale.eos.basic.util.security.shiro.session.MemcachedSessionDAO"> 
    	<constructor-arg ref="memcachedClient" />   
    </bean>  
     -->  
    <bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
        <!-- XMemcachedClientBuilder have two arguments.First is server list,and second is weights array. -->
        <constructor-arg>
            <list>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>localhost</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>11210</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>localhost</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>11211</value>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg>
	        <list>
                <value>1</value>
                <value>2</value>
	        </list>
        </constructor-arg>
        <property name="connectionPoolSize" value="2"></property>
        <property name="commandFactory">
                <bean class="net.rubyeye.xmemcached.command.TextCommandFactory"></bean>
        </property>
        <property name="sessionLocator">
                <bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
        </property>
        <property name="transcoder">
                <bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
        </property>
    </bean>
    <!-- Use factory bean to build memcached client -->
    <bean name="memcachedClient" factory-bean="memcachedClientBuilder" factory-method="build" destroy-method="shutdown"/>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean id="captchaFormAuthenticationFilter" class="com.whale.eos.basic.util.security.shiro.CaptchaFormAuthenticationFilter"/>

    <!-- 支持 Shiro对Controller的方法级AOP安全控制 begin-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>